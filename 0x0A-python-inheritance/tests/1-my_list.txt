The ``1-my_list`` module
============================

Using ``MyList``
---------------------

Import module
	>>> MyList = __import__('1-my-list').MyList


Print a sorted list
	>>>my_list = MyList()
	>>>my_list.append(12)
	>>>my_list.append(1)
	>>>my_list.append(4)
	>>>my_list.append(2)
	>>>my_list.append(3)
	>>>my_list.append(5)
	>>>print(my_list)
	[12, 1, 4, 2, 3, 5]
	>>>my_list.print_sorted()
	[1, 2, 3, 4, 5, 12]

print with negative
	>>>my_list = MyList()
        >>>my_list.append(-5)
        >>>my_list.append(1)
        >>>my_list.append(-6)
        >>>my_list.append(2)
        >>>my_list.append(7)
        >>>my_list.append(11)
	>>>my_list.append(4)
        >>>print(my_list)
        [-5, 1, -6, 2, 7, 11, 4] 
        >>>my_list.print_sorted()
        [-6, -5, 1, 2, 4, 7, 11]] 


print a empty list
Printing an empty list
    	>>> my_list = MyList()
	>>> my_list.print_sorted()
    	[]

MyList is an instance of the class list
    	>>> my_list = MyList()
    	>>> isinstance(my_list, list)
    	True


Instance has the correct type
    	>>> my_list = MyList()
    	>>> type(my_list) == MyList
    	True


MyList is a subclass of list
    	>>> issubclass(MyList, list)
    	True


Print_sorted method with 1 passed argument
    	>>> my_list = MyList()
    	>>> my_list.print_sorted([1, 2, 3])
    	Traceback (most recent call last):
    	      ...
    	TypeError: print_sorted() takes 1 positional argument but 2 were given


Print_sorted method with 2 passed arguments
    	>>> my_list = MyList()
    	>>> my_list.print_sorted([1, 2], [5, 4])
    	Traceback (most recent call last):
    	      ...
    	TypeError: print_sorted() takes 1 positional argument but 3 were given


Type of the print_sorted method
    	>>> my_list = MyList()
    	>>> type(my_list.print_sorted)
    	<class 'method'>


Check printable string
    	>>> my_list = MyList()
    	>>> my_list.append(5)
    	>>> print(my_list)
    	[5]

Check if print_sorted() returns a new list
    	>>> my_list = MyList()
    	>>> my_list.append(7)
    	>>> my_list.append(1)
    	>>> my_list.append(2)
    	>>> my_list.print_sorted()
    	[1, 2, 7]
    	>>> my_list
    	[7, 1, 2]

check parent object
	>>> my_list = [1, 2, 3]
	>>> my_list.print_sorted()
	Traceback  (most recent call last):
		...
	AttributeError: 'list' object has no attribute 'print_sorted'
	>>>
